Kayce Danna Kyrel Lab.

DAY 1
	Example 1. Turn the 3rd cell blue.

	var initial_state = [ '.', '.', '.', '.', '.' ];

	function main(n) {
 		moveRight();
 		moveRight();
 		useBlue();
	} 


	Example 2. Erase 3rd cell

	var initial_state = [ 'b', 'b', 'b', 'b', 'b' ];

	function main(n) {

 		moveRight();
 		moveRight();
 		erase();
 	}

 DAY 2
 	Example 1. Every Other Erase

 	var initial_state = [ 'b', 'b', 'b', 'b', 'b' ];

	function main(n) {

 		moveRight();
	 	erase();
 		moveRight();
 		moveRight();
 		erase();
 		}

 	Example 2. 

 	var initial_state = [ 'g', 'g', 'g', '.', '.' ];

	function main(n) {

		erase(draw());
		moveRight();
		erase(draw());
		moveRight();
		erase(draw());
		moveRight();
		moveRight();
		draw();
	}

	Example 3.

	//option 1. var initial_state = ['b', '.', '.', '.', '.' ];
	//option 2. var initial_state = ['g', '.', '.', '.', '.' ];
	//option 3. var initial_state = [ '.', '.', '.', '.', '.' ];

function main(n) {
  if(onBlue()){
    useBlue();
  }else if (onGreen()){
    useGreen();
  }
  if (onBlue() || onGreen()){
  erase();
  moveRight();
  moveRight();
  moveRight();
  moveRight();
  draw();
  }

}

DAY 3.
	
Example 1.

var initial_state = ['b', '.', '.', '.', '.'];


  }

function main(n) {
    
      if (initial_state === "b"){
         draw();
          moveRight();
      }
      else if (initial_state === "g") {
        draw();
        moveRight();
      }
     
    }

Example 2.

var initial_state = ['g', '.', '.', '.', '.'];

//start: ['b', '.', '.', '.', '.']
//finish: ['b', 'b', 'b', 'b', 'b']

//start: ['g', '.', '.', '.', '.']

//finish: ['g', 'g', 'g', 'g', 'g']

function main(n) {
      if (onBlue()){
        useBlue();
      }else if(onGreen()){
        useGreen();
      }
      for (var i = 0; i < initial_state.length; i++){
          draw();
          moveRight();
      }

Example 3.

var initial_state = ['.', '.', '.', '.', '.'];
//finish: ['b', 'b', '.', '.', '.'] (given n is 2)
//finish: ['b', 'b', 'b', '.', '.'] (given n is 3)
var n = 3; 

function main(n) {
useBlue();
for(var i=0; i<n; i++) {
  draw();
  moveRight();
}
}

Example 4.

var initial_state = ['b', 'b', 'b', 'b', 'b'];

function main(n) {
  for(var i = 0; i < initial_state.length ; i ++){
    if (i % 2 === 0){
      erase();
    }
  }

Example 5.

//start: ['b', 'b', 'b', 'b', 'b']
//finish: ['b', '.', 'b', '.', 'b']


var initial_state = ['b', 'b', 'b', 'b', 'b'];

function main(n) {
  for(var i = 0; i < initial_state.length; i++){
    if (i%2 !== 0){
      erase();
    }
    moveRight();
  }
  }

 DAY 4.

 Example 1

//start: ['.', '.', 'b', '.', '.']
//finish: ['.', '.', 'b', 'b', 'b']*/

var initial_state = ['b', '.', 'g', '.', '.'];

function main(n) {
  for(var i = 0; i < initial_state.length; i++){
    if (onBlue()){
        useBlue();
     }else if (onGreen()){
        useGreen();
      } else{ 
    draw(); 
  }
  moveRight();
  }    
}

Example 2. 

start: ['b', 'g', 'g', 'b', 'b']
finish: ['g', 'b', 'b', 'g', 'g']

start: ['b', '.', 'g', '.', 'b']

finish: ['g', '.', 'b', '.', 'g']*/



var initial_state = ['b', 'g', 'g', 'b', 'b'];

function main(n) { 
for(var i = 0; i < initial_state.length; i++){
  if (onBlue()){
    useGreen();
    draw();
  }else if(onGreen()){
    useBlue();
    draw();
  }
  moveRight();
}
}

Example 3.


var initial_state = ['b', 'b', '.', '.', '.'];
//var newarray = initial_state.reverse();

function main(n) { 
 var newarray =[];

 for(var i = 0; i < initial_state.length; i++){
    if(onBlue()){
      newarray[i] = "b";
    } 
    else if(onGreen()){
      newarray[i] = "g";
    }
    else{
      newarray[i] = ".";
  }
  moveRight();
 }

 for(i = 0; i < initial_state.length; i++ ){
  if(newarray[i] === "g"){
      useGreen();
      draw();
    } 
  else if(newarray[i] === "b"){
      useBlue();
      draw();
    }
    else{
      erase();
  }
  moveLeft();
 }
} 










